import { BMLBrowserEventTarget } from "../bml_browser";
type DOMString = string;
export declare class BMLCSSStyleDeclaration {
    private readonly baseDeclarationMap;
    private readonly declarationMap;
    private readonly computedPropertyGetter;
    private readonly propertySetter;
    constructor(baseDeclarationMap: Map<string, string>, declarationMap: Map<string, string>, computedPropertyGetter: (property: string) => string, propertySetter: (property: string, value: string) => void);
    setProperty(property: string, value: string): void;
    getPropertyValue(property: string): string;
}
export declare class BMLCSS2Properties {
    private readonly declaration;
    private readonly node;
    private readonly eventTarget;
    constructor(declaration: BMLCSSStyleDeclaration, node: HTMLElement, eventTarget: BMLBrowserEventTarget);
    private getColorIndexVariable;
    private setColorIndexVariable;
    get paddingTop(): string;
    get paddingRight(): string;
    get paddingBottom(): string;
    get paddingLeft(): string;
    get borderWidth(): string;
    get borderStyle(): string;
    get left(): DOMString;
    set left(value: DOMString);
    get top(): DOMString;
    set top(value: DOMString);
    get width(): DOMString;
    set width(value: DOMString);
    get height(): DOMString;
    set height(value: DOMString);
    get lineHeight(): string;
    get visibility(): DOMString;
    set visibility(value: DOMString);
    get fontFamily(): DOMString;
    set fontFamily(value: DOMString);
    get fontSize(): DOMString;
    set fontSize(value: DOMString);
    get fontWeight(): DOMString;
    set fontWeight(value: DOMString);
    get textAlign(): string;
    get letterSpacing(): string;
    get borderTopColorIndex(): DOMString;
    set borderTopColorIndex(value: DOMString);
    get borderRightColorIndex(): DOMString;
    set borderRightColorIndex(value: DOMString);
    get borderLeftColorIndex(): DOMString;
    set borderLeftColorIndex(value: DOMString);
    get borderBottomColorIndex(): DOMString;
    set borderBottomColorIndex(value: DOMString);
    get backgroundColorIndex(): DOMString;
    set backgroundColorIndex(value: DOMString);
    get colorIndex(): DOMString;
    set colorIndex(value: DOMString);
    get grayscaleColorIndex(): DOMString;
    set grayscaleColorIndex(value: DOMString);
    get clut(): string;
    get resolution(): string;
    get displayAspectRatio(): string;
    get navIndex(): string;
    get navUp(): string;
    get navDown(): string;
    get navLeft(): string;
    get navRight(): string;
    get usedKeyList(): DOMString;
    set usedKeyList(value: DOMString);
    get borderTopColor(): DOMString;
    set borderTopColor(value: DOMString);
    get borderRightColor(): DOMString;
    set borderRightColor(value: DOMString);
    get borderBottomColor(): DOMString;
    set borderBottomColor(value: DOMString);
    get borderLeftColor(): DOMString;
    set borderLeftColor(value: DOMString);
    get backgroundColor(): DOMString;
    set backgroundColor(value: DOMString);
    get color(): DOMString;
    set color(value: DOMString);
    get WapMarqueeStyle(): string;
    get WapMarqueeLoop(): string;
    get WapMarqueeSpeed(): string;
    get WapInputFormat(): string;
}
export {};
//# sourceMappingURL=BMLCSS2Properties.d.ts.map